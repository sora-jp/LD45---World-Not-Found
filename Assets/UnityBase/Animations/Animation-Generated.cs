#pragma warning disable

/*
	This file was auto-generated by a tool. Any changes will be lost upon regeneration.
*/

namespace UnityBase.Animations
{
    public static partial class Animation
    {
		public static UnityEngine.AI.NavMeshAgent AnimateDestination(this UnityEngine.AI.NavMeshAgent obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("destination",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentDestination(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("destination",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentDestination<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("destination",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateStoppingDistance(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("stoppingDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentStoppingDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("stoppingDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentStoppingDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("stoppingDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateVelocity(this UnityEngine.AI.NavMeshAgent obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentVelocity<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateNextPosition(this UnityEngine.AI.NavMeshAgent obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("nextPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentNextPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("nextPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentNextPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("nextPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateBaseOffset(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("baseOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentBaseOffset(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("baseOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentBaseOffset<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("baseOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateSpeed(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateAngularSpeed(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentAngularSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("angularSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentAngularSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("angularSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateAcceleration(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("acceleration",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentAcceleration(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("acceleration",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentAcceleration<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("acceleration",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateRadius(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshAgent AnimateHeight(this UnityEngine.AI.NavMeshAgent obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshAgentHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshAgentHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshAgent>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateHeight(this UnityEngine.AI.NavMeshObstacle obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateRadius(this UnityEngine.AI.NavMeshObstacle obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateVelocity(this UnityEngine.AI.NavMeshObstacle obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleVelocity<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateCarvingMoveThreshold(this UnityEngine.AI.NavMeshObstacle obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("carvingMoveThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleCarvingMoveThreshold(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("carvingMoveThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleCarvingMoveThreshold<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("carvingMoveThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateCarvingTimeToStationary(this UnityEngine.AI.NavMeshObstacle obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("carvingTimeToStationary",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleCarvingTimeToStationary(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("carvingTimeToStationary",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleCarvingTimeToStationary<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("carvingTimeToStationary",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateCenter(this UnityEngine.AI.NavMeshObstacle obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.NavMeshObstacle AnimateSize(this UnityEngine.AI.NavMeshObstacle obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateNavMeshObstacleSize(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateNavMeshObstacleSize<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.NavMeshObstacle>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AI.OffMeshLink AnimateCostOverride(this UnityEngine.AI.OffMeshLink obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("costOverride",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateOffMeshLinkCostOverride(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AI.OffMeshLink>()?.Animate("costOverride",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateOffMeshLinkCostOverride<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AI.OffMeshLink>()?.Animate("costOverride",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateRootPosition(this UnityEngine.Animator obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rootPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorRootPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("rootPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorRootPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("rootPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateRootRotation(this UnityEngine.Animator obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rootRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorRootRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("rootRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorRootRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("rootRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateBodyPosition(this UnityEngine.Animator obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("bodyPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorBodyPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("bodyPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorBodyPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("bodyPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateBodyRotation(this UnityEngine.Animator obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("bodyRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorBodyRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("bodyRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorBodyRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("bodyRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateFeetPivotActive(this UnityEngine.Animator obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("feetPivotActive",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorFeetPivotActive(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("feetPivotActive",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorFeetPivotActive<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("feetPivotActive",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateSpeed(this UnityEngine.Animator obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimatePlaybackTime(this UnityEngine.Animator obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("playbackTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorPlaybackTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("playbackTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorPlaybackTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("playbackTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateRecorderStartTime(this UnityEngine.Animator obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("recorderStartTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorRecorderStartTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("recorderStartTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorRecorderStartTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("recorderStartTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animator AnimateRecorderStopTime(this UnityEngine.Animator obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("recorderStopTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnimatorRecorderStopTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animator>()?.Animate("recorderStopTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAnimatorRecorderStopTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animator>()?.Animate("recorderStopTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.AimConstraint AnimateWeight(this UnityEngine.Animations.AimConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAimConstraintWeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAimConstraintWeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.AimConstraint AnimateRotationAtRest(this UnityEngine.Animations.AimConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAimConstraintRotationAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAimConstraintRotationAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.AimConstraint AnimateRotationOffset(this UnityEngine.Animations.AimConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAimConstraintRotationOffset(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAimConstraintRotationOffset<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.AimConstraint AnimateAimVector(this UnityEngine.Animations.AimConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("aimVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAimConstraintAimVector(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("aimVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAimConstraintAimVector<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("aimVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.AimConstraint AnimateUpVector(this UnityEngine.Animations.AimConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("upVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAimConstraintUpVector(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("upVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAimConstraintUpVector<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("upVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.AimConstraint AnimateWorldUpVector(this UnityEngine.Animations.AimConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("worldUpVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAimConstraintWorldUpVector(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("worldUpVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateAimConstraintWorldUpVector<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.AimConstraint>()?.Animate("worldUpVector",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.PositionConstraint AnimateWeight(this UnityEngine.Animations.PositionConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePositionConstraintWeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.PositionConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePositionConstraintWeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.PositionConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.PositionConstraint AnimateTranslationAtRest(this UnityEngine.Animations.PositionConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("translationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePositionConstraintTranslationAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.PositionConstraint>()?.Animate("translationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimatePositionConstraintTranslationAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.PositionConstraint>()?.Animate("translationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.PositionConstraint AnimateTranslationOffset(this UnityEngine.Animations.PositionConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("translationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePositionConstraintTranslationOffset(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.PositionConstraint>()?.Animate("translationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimatePositionConstraintTranslationOffset<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.PositionConstraint>()?.Animate("translationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.RotationConstraint AnimateWeight(this UnityEngine.Animations.RotationConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRotationConstraintWeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.RotationConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRotationConstraintWeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.RotationConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.RotationConstraint AnimateRotationAtRest(this UnityEngine.Animations.RotationConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRotationConstraintRotationAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.RotationConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRotationConstraintRotationAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.RotationConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.RotationConstraint AnimateRotationOffset(this UnityEngine.Animations.RotationConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRotationConstraintRotationOffset(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.RotationConstraint>()?.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRotationConstraintRotationOffset<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.RotationConstraint>()?.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.ScaleConstraint AnimateWeight(this UnityEngine.Animations.ScaleConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScaleConstraintWeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.ScaleConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScaleConstraintWeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.ScaleConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.ScaleConstraint AnimateScaleAtRest(this UnityEngine.Animations.ScaleConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("scaleAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScaleConstraintScaleAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.ScaleConstraint>()?.Animate("scaleAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateScaleConstraintScaleAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.ScaleConstraint>()?.Animate("scaleAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.ScaleConstraint AnimateScaleOffset(this UnityEngine.Animations.ScaleConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("scaleOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScaleConstraintScaleOffset(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.ScaleConstraint>()?.Animate("scaleOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateScaleConstraintScaleOffset<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.ScaleConstraint>()?.Animate("scaleOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.LookAtConstraint AnimateWeight(this UnityEngine.Animations.LookAtConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLookAtConstraintWeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLookAtConstraintWeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.LookAtConstraint AnimateRoll(this UnityEngine.Animations.LookAtConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("roll",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLookAtConstraintRoll(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("roll",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLookAtConstraintRoll<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("roll",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.LookAtConstraint AnimateRotationAtRest(this UnityEngine.Animations.LookAtConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLookAtConstraintRotationAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateLookAtConstraintRotationAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.LookAtConstraint AnimateRotationOffset(this UnityEngine.Animations.LookAtConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLookAtConstraintRotationOffset(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateLookAtConstraintRotationOffset<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.LookAtConstraint>()?.Animate("rotationOffset",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.ParentConstraint AnimateWeight(this UnityEngine.Animations.ParentConstraint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParentConstraintWeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.ParentConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParentConstraintWeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.ParentConstraint>()?.Animate("weight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.ParentConstraint AnimateTranslationAtRest(this UnityEngine.Animations.ParentConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("translationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParentConstraintTranslationAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.ParentConstraint>()?.Animate("translationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateParentConstraintTranslationAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.ParentConstraint>()?.Animate("translationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Animations.ParentConstraint AnimateRotationAtRest(this UnityEngine.Animations.ParentConstraint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParentConstraintRotationAtRest(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Animations.ParentConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateParentConstraintRotationAtRest<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Animations.ParentConstraint>()?.Animate("rotationAtRest",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimatePanLevel(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("panLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourcePanLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("panLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourcePanLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("panLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimatePan(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pan",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourcePan(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("pan",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourcePan<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("pan",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateVolume(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("volume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceVolume(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("volume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceVolume<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("volume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimatePitch(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pitch",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourcePitch(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("pitch",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourcePitch<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("pitch",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateTime(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimatePanStereo(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("panStereo",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourcePanStereo(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("panStereo",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourcePanStereo<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("panStereo",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateSpatialBlend(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("spatialBlend",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceSpatialBlend(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("spatialBlend",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceSpatialBlend<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("spatialBlend",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateReverbZoneMix(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reverbZoneMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceReverbZoneMix(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("reverbZoneMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceReverbZoneMix<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("reverbZoneMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateDopplerLevel(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dopplerLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceDopplerLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("dopplerLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceDopplerLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("dopplerLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateSpread(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("spread",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceSpread(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("spread",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceSpread<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("spread",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateMinDistance(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceMinDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceMinDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateMaxDistance(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceMaxDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceMaxDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateMinVolume(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minVolume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceMinVolume(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("minVolume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceMinVolume<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("minVolume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateMaxVolume(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxVolume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceMaxVolume(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("maxVolume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceMaxVolume<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("maxVolume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioSource AnimateRolloffFactor(this UnityEngine.AudioSource obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioSourceRolloffFactor(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioSource>()?.Animate("rolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioSourceRolloffFactor<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioSource>()?.Animate("rolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioLowPassFilter AnimateLowpassResonaceQ(this UnityEngine.AudioLowPassFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lowpassResonaceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioLowPassFilterLowpassResonaceQ(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioLowPassFilter>()?.Animate("lowpassResonaceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioLowPassFilterLowpassResonaceQ<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioLowPassFilter>()?.Animate("lowpassResonaceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioLowPassFilter AnimateCutoffFrequency(this UnityEngine.AudioLowPassFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cutoffFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioLowPassFilterCutoffFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioLowPassFilter>()?.Animate("cutoffFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioLowPassFilterCutoffFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioLowPassFilter>()?.Animate("cutoffFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioLowPassFilter AnimateLowpassResonanceQ(this UnityEngine.AudioLowPassFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lowpassResonanceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioLowPassFilterLowpassResonanceQ(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioLowPassFilter>()?.Animate("lowpassResonanceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioLowPassFilterLowpassResonanceQ<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioLowPassFilter>()?.Animate("lowpassResonanceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioHighPassFilter AnimateHighpassResonaceQ(this UnityEngine.AudioHighPassFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("highpassResonaceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioHighPassFilterHighpassResonaceQ(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioHighPassFilter>()?.Animate("highpassResonaceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioHighPassFilterHighpassResonaceQ<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioHighPassFilter>()?.Animate("highpassResonaceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioHighPassFilter AnimateCutoffFrequency(this UnityEngine.AudioHighPassFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cutoffFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioHighPassFilterCutoffFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioHighPassFilter>()?.Animate("cutoffFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioHighPassFilterCutoffFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioHighPassFilter>()?.Animate("cutoffFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioHighPassFilter AnimateHighpassResonanceQ(this UnityEngine.AudioHighPassFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("highpassResonanceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioHighPassFilterHighpassResonanceQ(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioHighPassFilter>()?.Animate("highpassResonanceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioHighPassFilterHighpassResonanceQ<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioHighPassFilter>()?.Animate("highpassResonanceQ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateLFReference(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterLFReference(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("lFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterLFReference<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("lFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateDryLevel(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dryLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterDryLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("dryLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterDryLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("dryLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateRoom(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("room",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterRoom(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("room",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterRoom<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("room",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateRoomHF(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("roomHF",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterRoomHF(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("roomHF",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterRoomHF<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("roomHF",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateRoomRolloffFactor(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("roomRolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterRoomRolloffFactor(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("roomRolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterRoomRolloffFactor<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("roomRolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateDecayTime(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("decayTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterDecayTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("decayTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterDecayTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("decayTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateDecayHFRatio(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("decayHFRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterDecayHFRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("decayHFRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterDecayHFRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("decayHFRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateReflectionsLevel(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reflectionsLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterReflectionsLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reflectionsLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterReflectionsLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reflectionsLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateReflectionsDelay(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reflectionsDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterReflectionsDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reflectionsDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterReflectionsDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reflectionsDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateReverbLevel(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reverbLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterReverbLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reverbLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterReverbLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reverbLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateReverbDelay(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reverbDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterReverbDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reverbDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterReverbDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("reverbDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateDiffusion(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("diffusion",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterDiffusion(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("diffusion",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterDiffusion<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("diffusion",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateDensity(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterDensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterDensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateHfReference(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("hfReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterHfReference(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("hfReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterHfReference<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("hfReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateRoomLF(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("roomLF",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterRoomLF(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("roomLF",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterRoomLF<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("roomLF",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbFilter AnimateLfReference(this UnityEngine.AudioReverbFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lfReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbFilterLfReference(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("lfReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbFilterLfReference<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbFilter>()?.Animate("lfReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioListener AnimateVolume(this UnityEngine.AudioListener obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("volume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioListenerVolume(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioListener>()?.Animate("volume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioListenerVolume<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioListener>()?.Animate("volume",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateMinDistance(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneMinDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneMinDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateMaxDistance(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneMaxDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneMaxDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateDecayTime(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("decayTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneDecayTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("decayTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneDecayTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("decayTime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateDecayHFRatio(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("decayHFRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneDecayHFRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("decayHFRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneDecayHFRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("decayHFRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateReflectionsDelay(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reflectionsDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneReflectionsDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("reflectionsDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneReflectionsDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("reflectionsDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateReverbDelay(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("reverbDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneReverbDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("reverbDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneReverbDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("reverbDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateHFReference(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("HFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneHFReference(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("HFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneHFReference<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("HFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateLFReference(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("LFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneLFReference(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("LFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneLFReference<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("LFReference",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateRoomRolloffFactor(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("roomRolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneRoomRolloffFactor(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("roomRolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneRoomRolloffFactor<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("roomRolloffFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateDiffusion(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("diffusion",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneDiffusion(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("diffusion",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneDiffusion<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("diffusion",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioReverbZone AnimateDensity(this UnityEngine.AudioReverbZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioReverbZoneDensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioReverbZoneDensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioReverbZone>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioDistortionFilter AnimateDistortionLevel(this UnityEngine.AudioDistortionFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("distortionLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioDistortionFilterDistortionLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioDistortionFilter>()?.Animate("distortionLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioDistortionFilterDistortionLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioDistortionFilter>()?.Animate("distortionLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioEchoFilter AnimateDelay(this UnityEngine.AudioEchoFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("delay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioEchoFilterDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("delay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioEchoFilterDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("delay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioEchoFilter AnimateDecayRatio(this UnityEngine.AudioEchoFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("decayRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioEchoFilterDecayRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("decayRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioEchoFilterDecayRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("decayRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioEchoFilter AnimateDryMix(this UnityEngine.AudioEchoFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dryMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioEchoFilterDryMix(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("dryMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioEchoFilterDryMix<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("dryMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioEchoFilter AnimateWetMix(this UnityEngine.AudioEchoFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wetMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioEchoFilterWetMix(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("wetMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioEchoFilterWetMix<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioEchoFilter>()?.Animate("wetMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateDryMix(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dryMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterDryMix(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("dryMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterDryMix<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("dryMix",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateWetMix1(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wetMix1",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterWetMix1(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("wetMix1",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterWetMix1<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("wetMix1",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateWetMix2(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wetMix2",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterWetMix2(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("wetMix2",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterWetMix2<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("wetMix2",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateWetMix3(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wetMix3",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterWetMix3(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("wetMix3",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterWetMix3<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("wetMix3",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateDelay(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("delay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("delay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("delay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateRate(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("rate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("rate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateDepth(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("depth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterDepth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("depth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterDepth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("depth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AudioChorusFilter AnimateFeedback(this UnityEngine.AudioChorusFilter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("feedback",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAudioChorusFilterFeedback(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("feedback",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAudioChorusFilterFeedback<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AudioChorusFilter>()?.Animate("feedback",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateSleepThreshold(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sleepThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothSleepThreshold(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("sleepThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothSleepThreshold<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("sleepThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateBendingStiffness(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("bendingStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothBendingStiffness(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("bendingStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothBendingStiffness<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("bendingStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateStretchingStiffness(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("stretchingStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothStretchingStiffness(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("stretchingStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothStretchingStiffness<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("stretchingStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateDamping(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("damping",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothDamping(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("damping",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothDamping<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("damping",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateExternalAcceleration(this UnityEngine.Cloth obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("externalAcceleration",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothExternalAcceleration(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("externalAcceleration",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateClothExternalAcceleration<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("externalAcceleration",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateRandomAcceleration(this UnityEngine.Cloth obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("randomAcceleration",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothRandomAcceleration(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("randomAcceleration",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateClothRandomAcceleration<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("randomAcceleration",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateFriction(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("friction",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothFriction(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("friction",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothFriction<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("friction",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateCollisionMassScale(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("collisionMassScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothCollisionMassScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("collisionMassScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothCollisionMassScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("collisionMassScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateUseVirtualParticles(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("useVirtualParticles",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothUseVirtualParticles(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("useVirtualParticles",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothUseVirtualParticles<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("useVirtualParticles",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateWorldVelocityScale(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("worldVelocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothWorldVelocityScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("worldVelocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothWorldVelocityScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("worldVelocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateWorldAccelerationScale(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("worldAccelerationScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothWorldAccelerationScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("worldAccelerationScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothWorldAccelerationScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("worldAccelerationScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateClothSolverFrequency(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("clothSolverFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothClothSolverFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("clothSolverFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothClothSolverFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("clothSolverFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateStiffnessFrequency(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("stiffnessFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothStiffnessFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("stiffnessFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothStiffnessFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("stiffnessFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateSelfCollisionDistance(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("selfCollisionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothSelfCollisionDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("selfCollisionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothSelfCollisionDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("selfCollisionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateSelfCollisionStiffness(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("selfCollisionStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothSelfCollisionStiffness(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("selfCollisionStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothSelfCollisionStiffness<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("selfCollisionStiffness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Cloth AnimateUseContinuousCollision(this UnityEngine.Cloth obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("useContinuousCollision",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateClothUseContinuousCollision(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Cloth>()?.Animate("useContinuousCollision",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateClothUseContinuousCollision<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Cloth>()?.Animate("useContinuousCollision",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateNearClipPlane(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraNearClipPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraNearClipPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateFarClipPlane(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraFarClipPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraFarClipPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateFieldOfView(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fieldOfView",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraFieldOfView(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("fieldOfView",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraFieldOfView<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("fieldOfView",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateOrthographicSize(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("orthographicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraOrthographicSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("orthographicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraOrthographicSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("orthographicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateTransparencySortAxis(this UnityEngine.Camera obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("transparencySortAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraTransparencySortAxis(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("transparencySortAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateCameraTransparencySortAxis<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("transparencySortAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateDepth(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("depth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraDepth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("depth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraDepth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("depth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateAspect(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("aspect",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraAspect(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("aspect",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraAspect<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("aspect",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateBackgroundColor(this UnityEngine.Camera obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("backgroundColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraBackgroundColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("backgroundColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateCameraBackgroundColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("backgroundColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateSensorSize(this UnityEngine.Camera obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sensorSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraSensorSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("sensorSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateCameraSensorSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("sensorSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateLensShift(this UnityEngine.Camera obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lensShift",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraLensShift(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("lensShift",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateCameraLensShift<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("lensShift",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateFocalLength(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("focalLength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraFocalLength(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("focalLength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraFocalLength<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("focalLength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateStereoSeparation(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("stereoSeparation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraStereoSeparation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("stereoSeparation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraStereoSeparation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("stereoSeparation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateStereoConvergence(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("stereoConvergence",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraStereoConvergence(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("stereoConvergence",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraStereoConvergence<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("stereoConvergence",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateNear(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("near",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraNear(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("near",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraNear<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("near",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateFar(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("far",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraFar(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("far",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraFar<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("far",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Camera AnimateFov(this UnityEngine.Camera obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fov",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCameraFov(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Camera>()?.Animate("fov",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCameraFov<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Camera>()?.Animate("fov",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateSize(this UnityEngine.ReflectionProbe obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeSize(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeSize<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateCenter(this UnityEngine.ReflectionProbe obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateNearClipPlane(this UnityEngine.ReflectionProbe obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeNearClipPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeNearClipPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateFarClipPlane(this UnityEngine.ReflectionProbe obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeFarClipPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeFarClipPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateIntensity(this UnityEngine.ReflectionProbe obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("intensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeIntensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("intensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeIntensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("intensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateShadowDistance(this UnityEngine.ReflectionProbe obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeShadowDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("shadowDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeShadowDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("shadowDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateBackgroundColor(this UnityEngine.ReflectionProbe obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("backgroundColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeBackgroundColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("backgroundColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeBackgroundColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("backgroundColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.ReflectionProbe AnimateBlendDistance(this UnityEngine.ReflectionProbe obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("blendDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateReflectionProbeBlendDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("blendDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateReflectionProbeBlendDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ReflectionProbe>()?.Animate("blendDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Renderer AnimateLightmapTilingOffset(this UnityEngine.Renderer obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lightmapTilingOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRendererLightmapTilingOffset(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Renderer>()?.Animate("lightmapTilingOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateRendererLightmapTilingOffset<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Renderer>()?.Animate("lightmapTilingOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.Renderer AnimateLightmapScaleOffset(this UnityEngine.Renderer obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRendererLightmapScaleOffset(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Renderer>()?.Animate("lightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateRendererLightmapScaleOffset<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Renderer>()?.Animate("lightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.Renderer AnimateRealtimeLightmapScaleOffset(this UnityEngine.Renderer obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("realtimeLightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRendererRealtimeLightmapScaleOffset(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Renderer>()?.Animate("realtimeLightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateRendererRealtimeLightmapScaleOffset<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Renderer>()?.Animate("realtimeLightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.Projector AnimateOrthoGraphicSize(this UnityEngine.Projector obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("orthoGraphicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateProjectorOrthoGraphicSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Projector>()?.Animate("orthoGraphicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateProjectorOrthoGraphicSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Projector>()?.Animate("orthoGraphicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Projector AnimateNearClipPlane(this UnityEngine.Projector obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateProjectorNearClipPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Projector>()?.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateProjectorNearClipPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Projector>()?.Animate("nearClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Projector AnimateFarClipPlane(this UnityEngine.Projector obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateProjectorFarClipPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Projector>()?.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateProjectorFarClipPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Projector>()?.Animate("farClipPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Projector AnimateFieldOfView(this UnityEngine.Projector obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fieldOfView",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateProjectorFieldOfView(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Projector>()?.Animate("fieldOfView",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateProjectorFieldOfView<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Projector>()?.Animate("fieldOfView",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Projector AnimateAspectRatio(this UnityEngine.Projector obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("aspectRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateProjectorAspectRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Projector>()?.Animate("aspectRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateProjectorAspectRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Projector>()?.Animate("aspectRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Projector AnimateOrthographicSize(this UnityEngine.Projector obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("orthographicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateProjectorOrthographicSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Projector>()?.Animate("orthographicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateProjectorOrthographicSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Projector>()?.Animate("orthographicSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateTime(this UnityEngine.TrailRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateStartWidth(this UnityEngine.TrailRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererStartWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("startWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererStartWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("startWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateEndWidth(this UnityEngine.TrailRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("endWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererEndWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("endWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererEndWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("endWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateWidthMultiplier(this UnityEngine.TrailRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("widthMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererWidthMultiplier(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("widthMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererWidthMultiplier<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("widthMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateMinVertexDistance(this UnityEngine.TrailRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minVertexDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererMinVertexDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("minVertexDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererMinVertexDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("minVertexDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateStartColor(this UnityEngine.TrailRenderer obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererStartColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererStartColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateEndColor(this UnityEngine.TrailRenderer obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("endColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererEndColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("endColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererEndColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("endColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.TrailRenderer AnimateShadowBias(this UnityEngine.TrailRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTrailRendererShadowBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTrailRendererShadowBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TrailRenderer>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LineRenderer AnimateStartWidth(this UnityEngine.LineRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLineRendererStartWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("startWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLineRendererStartWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("startWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LineRenderer AnimateEndWidth(this UnityEngine.LineRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("endWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLineRendererEndWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("endWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLineRendererEndWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("endWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LineRenderer AnimateWidthMultiplier(this UnityEngine.LineRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("widthMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLineRendererWidthMultiplier(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("widthMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLineRendererWidthMultiplier<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("widthMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LineRenderer AnimateStartColor(this UnityEngine.LineRenderer obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLineRendererStartColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateLineRendererStartColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.LineRenderer AnimateEndColor(this UnityEngine.LineRenderer obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("endColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLineRendererEndColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("endColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateLineRendererEndColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("endColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.LineRenderer AnimateShadowBias(this UnityEngine.LineRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLineRendererShadowBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLineRendererShadowBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LineRenderer>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.OcclusionArea AnimateCenter(this UnityEngine.OcclusionArea obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateOcclusionAreaCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.OcclusionArea>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateOcclusionAreaCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.OcclusionArea>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.OcclusionArea AnimateSize(this UnityEngine.OcclusionArea obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateOcclusionAreaSize(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.OcclusionArea>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateOcclusionAreaSize<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.OcclusionArea>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.LensFlare AnimateBrightness(this UnityEngine.LensFlare obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("brightness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLensFlareBrightness(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LensFlare>()?.Animate("brightness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLensFlareBrightness<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LensFlare>()?.Animate("brightness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LensFlare AnimateFadeSpeed(this UnityEngine.LensFlare obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fadeSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLensFlareFadeSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LensFlare>()?.Animate("fadeSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLensFlareFadeSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LensFlare>()?.Animate("fadeSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LensFlare AnimateColor(this UnityEngine.LensFlare obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLensFlareColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LensFlare>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateLensFlareColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LensFlare>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateSpotAngle(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("spotAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightSpotAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("spotAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightSpotAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("spotAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateInnerSpotAngle(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("innerSpotAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightInnerSpotAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("innerSpotAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightInnerSpotAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("innerSpotAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateColor(this UnityEngine.Light obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateLightColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateColorTemperature(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("colorTemperature",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightColorTemperature(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("colorTemperature",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightColorTemperature<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("colorTemperature",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateIntensity(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("intensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightIntensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("intensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightIntensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("intensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateBounceIntensity(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("bounceIntensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightBounceIntensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("bounceIntensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightBounceIntensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("bounceIntensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateBoundingSphereOverride(this UnityEngine.Light obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("boundingSphereOverride",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightBoundingSphereOverride(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("boundingSphereOverride",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateLightBoundingSphereOverride<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("boundingSphereOverride",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowBias(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowNormalBias(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowNormalBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowNormalBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowNormalBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowNormalBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowNormalBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowNearPlane(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowNearPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowNearPlane(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowNearPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowNearPlane<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowNearPlane",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateRange(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("range",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightRange(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("range",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightRange<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("range",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowRadius(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowAngle(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowStrength(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowStrength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowStrength(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowStrength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowStrength<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowStrength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowSoftness(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowSoftness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowSoftness(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowSoftness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowSoftness<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowSoftness",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowSoftnessFade(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowSoftnessFade",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowSoftnessFade(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowSoftnessFade",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowSoftnessFade<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowSoftnessFade",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateCookieSize(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cookieSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightCookieSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("cookieSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightCookieSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("cookieSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateAreaSize(this UnityEngine.Light obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("areaSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightAreaSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("areaSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateLightAreaSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("areaSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowConstantBias(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowConstantBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowConstantBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowConstantBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowConstantBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowConstantBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Light AnimateShadowObjectSizeBias(this UnityEngine.Light obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowObjectSizeBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightShadowObjectSizeBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Light>()?.Animate("shadowObjectSizeBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightShadowObjectSizeBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Light>()?.Animate("shadowObjectSizeBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LightProbeProxyVolume AnimateSizeCustom(this UnityEngine.LightProbeProxyVolume obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sizeCustom",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightProbeProxyVolumeSizeCustom(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LightProbeProxyVolume>()?.Animate("sizeCustom",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateLightProbeProxyVolumeSizeCustom<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LightProbeProxyVolume>()?.Animate("sizeCustom",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.LightProbeProxyVolume AnimateOriginCustom(this UnityEngine.LightProbeProxyVolume obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("originCustom",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightProbeProxyVolumeOriginCustom(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LightProbeProxyVolume>()?.Animate("originCustom",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateLightProbeProxyVolumeOriginCustom<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LightProbeProxyVolume>()?.Animate("originCustom",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.LightProbeProxyVolume AnimateProbeDensity(this UnityEngine.LightProbeProxyVolume obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("probeDensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLightProbeProxyVolumeProbeDensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LightProbeProxyVolume>()?.Animate("probeDensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLightProbeProxyVolumeProbeDensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LightProbeProxyVolume>()?.Animate("probeDensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LODGroup AnimateLocalReferencePoint(this UnityEngine.LODGroup obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("localReferencePoint",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLODGroupLocalReferencePoint(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LODGroup>()?.Animate("localReferencePoint",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateLODGroupLocalReferencePoint<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LODGroup>()?.Animate("localReferencePoint",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.LODGroup AnimateSize(this UnityEngine.LODGroup obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLODGroupSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LODGroup>()?.Animate("size",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLODGroupSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LODGroup>()?.Animate("size",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.LODGroup AnimateCrossFadeAnimationDuration(this UnityEngine.LODGroup obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("crossFadeAnimationDuration",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLODGroupCrossFadeAnimationDuration(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.LODGroup>()?.Animate("crossFadeAnimationDuration",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLODGroupCrossFadeAnimationDuration<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.LODGroup>()?.Animate("crossFadeAnimationDuration",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GUITexture AnimateColor(this UnityEngine.GUITexture obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGUITextureColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.GUITexture>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateGUITextureColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.GUITexture>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateAnchorMin(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchorMin",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformAnchorMin(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchorMin",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformAnchorMin<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchorMin",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateAnchorMax(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchorMax",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformAnchorMax(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchorMax",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformAnchorMax<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchorMax",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateAnchoredPosition(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchoredPosition",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformAnchoredPosition(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchoredPosition",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformAnchoredPosition<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchoredPosition",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateSizeDelta(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sizeDelta",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformSizeDelta(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("sizeDelta",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformSizeDelta<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("sizeDelta",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimatePivot(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pivot",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformPivot(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("pivot",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformPivot<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("pivot",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateAnchoredPosition3D(this UnityEngine.RectTransform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchoredPosition3D",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformAnchoredPosition3D(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchoredPosition3D",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformAnchoredPosition3D<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("anchoredPosition3D",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateOffsetMin(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("offsetMin",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformOffsetMin(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("offsetMin",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformOffsetMin<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("offsetMin",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RectTransform AnimateOffsetMax(this UnityEngine.RectTransform obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("offsetMax",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRectTransformOffsetMax(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RectTransform>()?.Animate("offsetMax",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRectTransformOffsetMax<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RectTransform>()?.Animate("offsetMax",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimatePosition(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("position",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("position",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("position",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateLocalPosition(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("localPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformLocalPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("localPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformLocalPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("localPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateEulerAngles(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("eulerAngles",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformEulerAngles(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("eulerAngles",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformEulerAngles<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("eulerAngles",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateLocalEulerAngles(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("localEulerAngles",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformLocalEulerAngles(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("localEulerAngles",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformLocalEulerAngles<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("localEulerAngles",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateRight(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("right",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformRight(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("right",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformRight<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("right",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateUp(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("up",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformUp(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("up",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformUp<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("up",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateForward(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forward",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformForward(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("forward",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformForward<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("forward",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateRotation(this UnityEngine.Transform obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("rotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateTransformRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("rotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateLocalRotation(this UnityEngine.Transform obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("localRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformLocalRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("localRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateTransformLocalRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("localRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.Transform AnimateLocalScale(this UnityEngine.Transform obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("localScale",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTransformLocalScale(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Transform>()?.Animate("localScale",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTransformLocalScale<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Transform>()?.Animate("localScale",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.SpriteRenderer AnimateSize(this UnityEngine.SpriteRenderer obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpriteRendererSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpriteRenderer>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateSpriteRendererSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpriteRenderer>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.SpriteRenderer AnimateAdaptiveModeThreshold(this UnityEngine.SpriteRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("adaptiveModeThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpriteRendererAdaptiveModeThreshold(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpriteRenderer>()?.Animate("adaptiveModeThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpriteRendererAdaptiveModeThreshold<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpriteRenderer>()?.Animate("adaptiveModeThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpriteRenderer AnimateColor(this UnityEngine.SpriteRenderer obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpriteRendererColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpriteRenderer>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateSpriteRendererColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpriteRenderer>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Grid AnimateCellSize(this UnityEngine.Grid obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cellSize",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGridCellSize(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Grid>()?.Animate("cellSize",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateGridCellSize<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Grid>()?.Animate("cellSize",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Grid AnimateCellGap(this UnityEngine.Grid obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cellGap",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGridCellGap(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Grid>()?.Animate("cellGap",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateGridCellGap<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Grid>()?.Animate("cellGap",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartDelay(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimatePlaybackSpeed(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("playbackSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemPlaybackSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("playbackSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemPlaybackSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("playbackSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateEmissionRate(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("emissionRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemEmissionRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("emissionRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemEmissionRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("emissionRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartSpeed(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartSize(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartColor(this UnityEngine.ParticleSystem obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartRotation(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startRotation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartRotation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startRotation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartRotation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startRotation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartRotation3D(this UnityEngine.ParticleSystem obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startRotation3D",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartRotation3D(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startRotation3D",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartRotation3D<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startRotation3D",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateStartLifetime(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startLifetime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemStartLifetime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startLifetime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemStartLifetime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("startLifetime",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateGravityModifier(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("gravityModifier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemGravityModifier(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("gravityModifier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemGravityModifier<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("gravityModifier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystem AnimateTime(this UnityEngine.ParticleSystem obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemTime(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemTime<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystem>()?.Animate("time",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateLengthScale(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lengthScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererLengthScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("lengthScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererLengthScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("lengthScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateVelocityScale(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("velocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererVelocityScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("velocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererVelocityScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("velocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateCameraVelocityScale(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cameraVelocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererCameraVelocityScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("cameraVelocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererCameraVelocityScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("cameraVelocityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateNormalDirection(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("normalDirection",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererNormalDirection(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("normalDirection",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererNormalDirection<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("normalDirection",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateShadowBias(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererShadowBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererShadowBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("shadowBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateSortingFudge(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sortingFudge",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererSortingFudge(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("sortingFudge",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererSortingFudge<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("sortingFudge",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateMinParticleSize(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minParticleSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererMinParticleSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("minParticleSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererMinParticleSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("minParticleSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateMaxParticleSize(this UnityEngine.ParticleSystemRenderer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxParticleSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererMaxParticleSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("maxParticleSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererMaxParticleSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("maxParticleSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimatePivot(this UnityEngine.ParticleSystemRenderer obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pivot",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererPivot(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("pivot",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererPivot<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("pivot",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemRenderer AnimateFlip(this UnityEngine.ParticleSystemRenderer obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("flip",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemRendererFlip(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("flip",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemRendererFlip<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemRenderer>()?.Animate("flip",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemForceField AnimateStartRange(this UnityEngine.ParticleSystemForceField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("startRange",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemForceFieldStartRange(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("startRange",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemForceFieldStartRange<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("startRange",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemForceField AnimateEndRange(this UnityEngine.ParticleSystemForceField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("endRange",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemForceFieldEndRange(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("endRange",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemForceFieldEndRange<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("endRange",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemForceField AnimateLength(this UnityEngine.ParticleSystemForceField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("length",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemForceFieldLength(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("length",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemForceFieldLength<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("length",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemForceField AnimateGravityFocus(this UnityEngine.ParticleSystemForceField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("gravityFocus",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemForceFieldGravityFocus(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("gravityFocus",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemForceFieldGravityFocus<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("gravityFocus",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ParticleSystemForceField AnimateRotationRandomness(this UnityEngine.ParticleSystemForceField obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationRandomness",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateParticleSystemForceFieldRotationRandomness(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("rotationRandomness",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateParticleSystemForceFieldRotationRandomness<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ParticleSystemForceField>()?.Animate("rotationRandomness",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateVelocity(this UnityEngine.Rigidbody obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyVelocity<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("velocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateAngularVelocity(this UnityEngine.Rigidbody obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyAngularVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("angularVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyAngularVelocity<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("angularVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateDrag(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateAngularDrag(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyAngularDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyAngularDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateMass(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyMass(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyMass<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateMaxDepenetrationVelocity(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxDepenetrationVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyMaxDepenetrationVelocity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("maxDepenetrationVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyMaxDepenetrationVelocity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("maxDepenetrationVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateCenterOfMass(this UnityEngine.Rigidbody obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("centerOfMass",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyCenterOfMass(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("centerOfMass",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyCenterOfMass<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("centerOfMass",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateInertiaTensorRotation(this UnityEngine.Rigidbody obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("inertiaTensorRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyInertiaTensorRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("inertiaTensorRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyInertiaTensorRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("inertiaTensorRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateInertiaTensor(this UnityEngine.Rigidbody obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("inertiaTensor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyInertiaTensor(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("inertiaTensor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyInertiaTensor<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("inertiaTensor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimatePosition(this UnityEngine.Rigidbody obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("position",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("position",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("position",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateRotation(this UnityEngine.Rigidbody obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("rotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("rotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateSleepThreshold(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sleepThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodySleepThreshold(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("sleepThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodySleepThreshold<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("sleepThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateMaxAngularVelocity(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxAngularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodyMaxAngularVelocity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("maxAngularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodyMaxAngularVelocity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("maxAngularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateSleepVelocity(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sleepVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodySleepVelocity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("sleepVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodySleepVelocity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("sleepVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody AnimateSleepAngularVelocity(this UnityEngine.Rigidbody obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sleepAngularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbodySleepAngularVelocity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("sleepAngularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbodySleepAngularVelocity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody>()?.Animate("sleepAngularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Collider AnimateContactOffset(this UnityEngine.Collider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("contactOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateColliderContactOffset(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Collider>()?.Animate("contactOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateColliderContactOffset<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Collider>()?.Animate("contactOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateRadius(this UnityEngine.CharacterController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateHeight(this UnityEngine.CharacterController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateCenter(this UnityEngine.CharacterController obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateSlopeLimit(this UnityEngine.CharacterController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("slopeLimit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerSlopeLimit(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("slopeLimit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerSlopeLimit<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("slopeLimit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateStepOffset(this UnityEngine.CharacterController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("stepOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerStepOffset(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("stepOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerStepOffset<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("stepOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateSkinWidth(this UnityEngine.CharacterController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("skinWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerSkinWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("skinWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerSkinWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("skinWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterController AnimateMinMoveDistance(this UnityEngine.CharacterController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minMoveDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterControllerMinMoveDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterController>()?.Animate("minMoveDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterControllerMinMoveDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterController>()?.Animate("minMoveDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.MeshCollider AnimateSkinWidth(this UnityEngine.MeshCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("skinWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateMeshColliderSkinWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.MeshCollider>()?.Animate("skinWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateMeshColliderSkinWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.MeshCollider>()?.Animate("skinWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CapsuleCollider AnimateCenter(this UnityEngine.CapsuleCollider obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCapsuleColliderCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CapsuleCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateCapsuleColliderCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CapsuleCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.CapsuleCollider AnimateRadius(this UnityEngine.CapsuleCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCapsuleColliderRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CapsuleCollider>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCapsuleColliderRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CapsuleCollider>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CapsuleCollider AnimateHeight(this UnityEngine.CapsuleCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCapsuleColliderHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CapsuleCollider>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCapsuleColliderHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CapsuleCollider>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BoxCollider AnimateCenter(this UnityEngine.BoxCollider obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBoxColliderCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BoxCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateBoxColliderCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BoxCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.BoxCollider AnimateSize(this UnityEngine.BoxCollider obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBoxColliderSize(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BoxCollider>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateBoxColliderSize<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BoxCollider>()?.Animate("size",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.BoxCollider AnimateExtents(this UnityEngine.BoxCollider obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("extents",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBoxColliderExtents(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BoxCollider>()?.Animate("extents",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateBoxColliderExtents<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BoxCollider>()?.Animate("extents",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.SphereCollider AnimateCenter(this UnityEngine.SphereCollider obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSphereColliderCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SphereCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateSphereColliderCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SphereCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.SphereCollider AnimateRadius(this UnityEngine.SphereCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSphereColliderRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SphereCollider>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSphereColliderRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SphereCollider>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce AnimateForce(this UnityEngine.ConstantForce obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("force",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForceForce(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("force",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConstantForceForce<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("force",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce AnimateRelativeForce(this UnityEngine.ConstantForce obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("relativeForce",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForceRelativeForce(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("relativeForce",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConstantForceRelativeForce<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("relativeForce",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce AnimateTorque(this UnityEngine.ConstantForce obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("torque",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForceTorque(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("torque",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConstantForceTorque<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("torque",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce AnimateRelativeTorque(this UnityEngine.ConstantForce obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("relativeTorque",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForceRelativeTorque(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("relativeTorque",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConstantForceRelativeTorque<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce>()?.Animate("relativeTorque",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateAxis(this UnityEngine.Joint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("axis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointAxis(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("axis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateJointAxis<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("axis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateAnchor(this UnityEngine.Joint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointAnchor(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("anchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateJointAnchor<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("anchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateConnectedAnchor(this UnityEngine.Joint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("connectedAnchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointConnectedAnchor(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("connectedAnchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateJointConnectedAnchor<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("connectedAnchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateBreakForce(this UnityEngine.Joint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("breakForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointBreakForce(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("breakForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateJointBreakForce<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("breakForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateBreakTorque(this UnityEngine.Joint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("breakTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointBreakTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("breakTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateJointBreakTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("breakTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateMassScale(this UnityEngine.Joint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("massScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointMassScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("massScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateJointMassScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("massScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint AnimateConnectedMassScale(this UnityEngine.Joint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("connectedMassScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJointConnectedMassScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint>()?.Animate("connectedMassScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateJointConnectedMassScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint>()?.Animate("connectedMassScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint AnimateSpring(this UnityEngine.SpringJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("spring",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJointSpring(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("spring",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJointSpring<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("spring",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint AnimateDamper(this UnityEngine.SpringJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("damper",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJointDamper(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("damper",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJointDamper<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("damper",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint AnimateMinDistance(this UnityEngine.SpringJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJointMinDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJointMinDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("minDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint AnimateMaxDistance(this UnityEngine.SpringJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJointMaxDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJointMaxDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("maxDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint AnimateTolerance(this UnityEngine.SpringJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("tolerance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJointTolerance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("tolerance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJointTolerance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint>()?.Animate("tolerance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterJoint AnimateSwingAxis(this UnityEngine.CharacterJoint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("swingAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterJointSwingAxis(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterJoint>()?.Animate("swingAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateCharacterJointSwingAxis<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterJoint>()?.Animate("swingAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterJoint AnimateProjectionDistance(this UnityEngine.CharacterJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("projectionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterJointProjectionDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterJoint>()?.Animate("projectionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterJointProjectionDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterJoint>()?.Animate("projectionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CharacterJoint AnimateProjectionAngle(this UnityEngine.CharacterJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("projectionAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCharacterJointProjectionAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CharacterJoint>()?.Animate("projectionAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCharacterJointProjectionAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CharacterJoint>()?.Animate("projectionAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateSecondaryAxis(this UnityEngine.ConfigurableJoint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("secondaryAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointSecondaryAxis(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("secondaryAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointSecondaryAxis<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("secondaryAxis",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateTargetPosition(this UnityEngine.ConfigurableJoint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("targetPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointTargetPosition(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointTargetPosition<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetPosition",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateTargetVelocity(this UnityEngine.ConfigurableJoint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("targetVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointTargetVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointTargetVelocity<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateTargetRotation(this UnityEngine.ConfigurableJoint obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("targetRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointTargetRotation(this UnityEngine.GameObject obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointTargetRotation<T>(this T obj,UnityEngine.Quaternion newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetRotation",newValue,duration,UnityEngine.Quaternion.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateTargetAngularVelocity(this UnityEngine.ConfigurableJoint obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("targetAngularVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointTargetAngularVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetAngularVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointTargetAngularVelocity<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("targetAngularVelocity",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateProjectionDistance(this UnityEngine.ConfigurableJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("projectionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointProjectionDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("projectionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointProjectionDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("projectionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ConfigurableJoint AnimateProjectionAngle(this UnityEngine.ConfigurableJoint obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("projectionAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConfigurableJointProjectionAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("projectionAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateConfigurableJointProjectionAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConfigurableJoint>()?.Animate("projectionAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimatePosition(this UnityEngine.Rigidbody2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("position",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DPosition(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("position",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DPosition<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("position",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateRotation(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DRotation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("rotation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DRotation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("rotation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateVelocity(this UnityEngine.Rigidbody2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("velocity",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("velocity",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DVelocity<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("velocity",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateAngularVelocity(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DAngularVelocity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("angularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DAngularVelocity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("angularVelocity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateMass(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DMass(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DMass<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateCenterOfMass(this UnityEngine.Rigidbody2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("centerOfMass",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DCenterOfMass(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("centerOfMass",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DCenterOfMass<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("centerOfMass",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateInertia(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("inertia",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DInertia(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("inertia",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DInertia<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("inertia",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateDrag(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateAngularDrag(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DAngularDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DAngularDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Rigidbody2D AnimateGravityScale(this UnityEngine.Rigidbody2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("gravityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRigidbody2DGravityScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("gravityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRigidbody2DGravityScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Rigidbody2D>()?.Animate("gravityScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Collider2D AnimateDensity(this UnityEngine.Collider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCollider2DDensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Collider2D>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCollider2DDensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Collider2D>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Collider2D AnimateOffset(this UnityEngine.Collider2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("offset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCollider2DOffset(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Collider2D>()?.Animate("offset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateCollider2DOffset<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Collider2D>()?.Animate("offset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.CircleCollider2D AnimateRadius(this UnityEngine.CircleCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCircleCollider2DRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CircleCollider2D>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCircleCollider2DRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CircleCollider2D>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CircleCollider2D AnimateCenter(this UnityEngine.CircleCollider2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCircleCollider2DCenter(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CircleCollider2D>()?.Animate("center",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateCircleCollider2DCenter<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CircleCollider2D>()?.Animate("center",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.CapsuleCollider2D AnimateSize(this UnityEngine.CapsuleCollider2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCapsuleCollider2DSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CapsuleCollider2D>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateCapsuleCollider2DSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CapsuleCollider2D>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.EdgeCollider2D AnimateEdgeRadius(this UnityEngine.EdgeCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateEdgeCollider2DEdgeRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.EdgeCollider2D>()?.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateEdgeCollider2DEdgeRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.EdgeCollider2D>()?.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BoxCollider2D AnimateSize(this UnityEngine.BoxCollider2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBoxCollider2DSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BoxCollider2D>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateBoxCollider2DSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BoxCollider2D>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.BoxCollider2D AnimateEdgeRadius(this UnityEngine.BoxCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBoxCollider2DEdgeRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BoxCollider2D>()?.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBoxCollider2DEdgeRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BoxCollider2D>()?.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BoxCollider2D AnimateCenter(this UnityEngine.BoxCollider2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBoxCollider2DCenter(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BoxCollider2D>()?.Animate("center",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateBoxCollider2DCenter<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BoxCollider2D>()?.Animate("center",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.CompositeCollider2D AnimateVertexDistance(this UnityEngine.CompositeCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("vertexDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCompositeCollider2DVertexDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CompositeCollider2D>()?.Animate("vertexDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCompositeCollider2DVertexDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CompositeCollider2D>()?.Animate("vertexDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CompositeCollider2D AnimateEdgeRadius(this UnityEngine.CompositeCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCompositeCollider2DEdgeRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CompositeCollider2D>()?.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCompositeCollider2DEdgeRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CompositeCollider2D>()?.Animate("edgeRadius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CompositeCollider2D AnimateOffsetDistance(this UnityEngine.CompositeCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("offsetDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCompositeCollider2DOffsetDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CompositeCollider2D>()?.Animate("offsetDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCompositeCollider2DOffsetDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CompositeCollider2D>()?.Animate("offsetDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint2D AnimateBreakForce(this UnityEngine.Joint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("breakForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJoint2DBreakForce(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint2D>()?.Animate("breakForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateJoint2DBreakForce<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint2D>()?.Animate("breakForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Joint2D AnimateBreakTorque(this UnityEngine.Joint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("breakTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateJoint2DBreakTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Joint2D>()?.Animate("breakTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateJoint2DBreakTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Joint2D>()?.Animate("breakTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AnchoredJoint2D AnimateAnchor(this UnityEngine.AnchoredJoint2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnchoredJoint2DAnchor(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AnchoredJoint2D>()?.Animate("anchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateAnchoredJoint2DAnchor<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AnchoredJoint2D>()?.Animate("anchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.AnchoredJoint2D AnimateConnectedAnchor(this UnityEngine.AnchoredJoint2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("connectedAnchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAnchoredJoint2DConnectedAnchor(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AnchoredJoint2D>()?.Animate("connectedAnchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateAnchoredJoint2DConnectedAnchor<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AnchoredJoint2D>()?.Animate("connectedAnchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint2D AnimateDistance(this UnityEngine.SpringJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("distance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJoint2DDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint2D>()?.Animate("distance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJoint2DDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint2D>()?.Animate("distance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint2D AnimateDampingRatio(this UnityEngine.SpringJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJoint2DDampingRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint2D>()?.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJoint2DDampingRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint2D>()?.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpringJoint2D AnimateFrequency(this UnityEngine.SpringJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpringJoint2DFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpringJoint2D>()?.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpringJoint2DFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpringJoint2D>()?.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.DistanceJoint2D AnimateDistance(this UnityEngine.DistanceJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("distance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateDistanceJoint2DDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.DistanceJoint2D>()?.Animate("distance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateDistanceJoint2DDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.DistanceJoint2D>()?.Animate("distance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.FrictionJoint2D AnimateMaxForce(this UnityEngine.FrictionJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateFrictionJoint2DMaxForce(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.FrictionJoint2D>()?.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateFrictionJoint2DMaxForce<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.FrictionJoint2D>()?.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.FrictionJoint2D AnimateMaxTorque(this UnityEngine.FrictionJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateFrictionJoint2DMaxTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.FrictionJoint2D>()?.Animate("maxTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateFrictionJoint2DMaxTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.FrictionJoint2D>()?.Animate("maxTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.RelativeJoint2D AnimateMaxForce(this UnityEngine.RelativeJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRelativeJoint2DMaxForce(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRelativeJoint2DMaxForce<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.RelativeJoint2D AnimateMaxTorque(this UnityEngine.RelativeJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRelativeJoint2DMaxTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("maxTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRelativeJoint2DMaxTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("maxTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.RelativeJoint2D AnimateCorrectionScale(this UnityEngine.RelativeJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("correctionScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRelativeJoint2DCorrectionScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("correctionScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRelativeJoint2DCorrectionScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("correctionScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.RelativeJoint2D AnimateLinearOffset(this UnityEngine.RelativeJoint2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("linearOffset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRelativeJoint2DLinearOffset(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("linearOffset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateRelativeJoint2DLinearOffset<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("linearOffset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.RelativeJoint2D AnimateAngularOffset(this UnityEngine.RelativeJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateRelativeJoint2DAngularOffset(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("angularOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateRelativeJoint2DAngularOffset<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.RelativeJoint2D>()?.Animate("angularOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SliderJoint2D AnimateAngle(this UnityEngine.SliderJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSliderJoint2DAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SliderJoint2D>()?.Animate("angle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSliderJoint2DAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SliderJoint2D>()?.Animate("angle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TargetJoint2D AnimateAnchor(this UnityEngine.TargetJoint2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("anchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTargetJoint2DAnchor(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("anchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateTargetJoint2DAnchor<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("anchor",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.TargetJoint2D AnimateTarget(this UnityEngine.TargetJoint2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("target",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTargetJoint2DTarget(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("target",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateTargetJoint2DTarget<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("target",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.TargetJoint2D AnimateMaxForce(this UnityEngine.TargetJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTargetJoint2DMaxForce(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTargetJoint2DMaxForce<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("maxForce",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TargetJoint2D AnimateDampingRatio(this UnityEngine.TargetJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTargetJoint2DDampingRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTargetJoint2DDampingRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TargetJoint2D AnimateFrequency(this UnityEngine.TargetJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTargetJoint2DFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTargetJoint2DFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TargetJoint2D>()?.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.FixedJoint2D AnimateDampingRatio(this UnityEngine.FixedJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateFixedJoint2DDampingRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.FixedJoint2D>()?.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateFixedJoint2DDampingRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.FixedJoint2D>()?.Animate("dampingRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.FixedJoint2D AnimateFrequency(this UnityEngine.FixedJoint2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateFixedJoint2DFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.FixedJoint2D>()?.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateFixedJoint2DFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.FixedJoint2D>()?.Animate("frequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AreaEffector2D AnimateForceAngle(this UnityEngine.AreaEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAreaEffector2DForceAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAreaEffector2DForceAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AreaEffector2D AnimateForceMagnitude(this UnityEngine.AreaEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAreaEffector2DForceMagnitude(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAreaEffector2DForceMagnitude<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AreaEffector2D AnimateForceVariation(this UnityEngine.AreaEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAreaEffector2DForceVariation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAreaEffector2DForceVariation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AreaEffector2D AnimateDrag(this UnityEngine.AreaEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAreaEffector2DDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAreaEffector2DDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AreaEffector2D AnimateAngularDrag(this UnityEngine.AreaEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAreaEffector2DAngularDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAreaEffector2DAngularDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.AreaEffector2D AnimateForceDirection(this UnityEngine.AreaEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceDirection",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAreaEffector2DForceDirection(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceDirection",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAreaEffector2DForceDirection<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.AreaEffector2D>()?.Animate("forceDirection",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateSurfaceLevel(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("surfaceLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DSurfaceLevel(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("surfaceLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DSurfaceLevel<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("surfaceLevel",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateDensity(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DDensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DDensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("density",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateLinearDrag(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("linearDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DLinearDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("linearDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DLinearDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("linearDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateAngularDrag(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DAngularDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DAngularDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateFlowAngle(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("flowAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DFlowAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("flowAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DFlowAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("flowAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateFlowMagnitude(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("flowMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DFlowMagnitude(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("flowMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DFlowMagnitude<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("flowMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.BuoyancyEffector2D AnimateFlowVariation(this UnityEngine.BuoyancyEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("flowVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBuoyancyEffector2DFlowVariation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("flowVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateBuoyancyEffector2DFlowVariation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.BuoyancyEffector2D>()?.Animate("flowVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PointEffector2D AnimateForceMagnitude(this UnityEngine.PointEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePointEffector2DForceMagnitude(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("forceMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePointEffector2DForceMagnitude<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("forceMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PointEffector2D AnimateForceVariation(this UnityEngine.PointEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePointEffector2DForceVariation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("forceVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePointEffector2DForceVariation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("forceVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PointEffector2D AnimateDistanceScale(this UnityEngine.PointEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("distanceScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePointEffector2DDistanceScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("distanceScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePointEffector2DDistanceScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("distanceScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PointEffector2D AnimateDrag(this UnityEngine.PointEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePointEffector2DDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePointEffector2DDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("drag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PointEffector2D AnimateAngularDrag(this UnityEngine.PointEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePointEffector2DAngularDrag(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePointEffector2DAngularDrag<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PointEffector2D>()?.Animate("angularDrag",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PlatformEffector2D AnimateSurfaceArc(this UnityEngine.PlatformEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("surfaceArc",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePlatformEffector2DSurfaceArc(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("surfaceArc",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePlatformEffector2DSurfaceArc<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("surfaceArc",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PlatformEffector2D AnimateSideArc(this UnityEngine.PlatformEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sideArc",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePlatformEffector2DSideArc(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("sideArc",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePlatformEffector2DSideArc<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("sideArc",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PlatformEffector2D AnimateRotationalOffset(this UnityEngine.PlatformEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("rotationalOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePlatformEffector2DRotationalOffset(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("rotationalOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePlatformEffector2DRotationalOffset<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("rotationalOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.PlatformEffector2D AnimateSideAngleVariance(this UnityEngine.PlatformEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("sideAngleVariance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimatePlatformEffector2DSideAngleVariance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("sideAngleVariance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimatePlatformEffector2DSideAngleVariance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.PlatformEffector2D>()?.Animate("sideAngleVariance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SurfaceEffector2D AnimateSpeed(this UnityEngine.SurfaceEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSurfaceEffector2DSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SurfaceEffector2D>()?.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSurfaceEffector2DSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SurfaceEffector2D>()?.Animate("speed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SurfaceEffector2D AnimateSpeedVariation(this UnityEngine.SurfaceEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("speedVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSurfaceEffector2DSpeedVariation(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SurfaceEffector2D>()?.Animate("speedVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSurfaceEffector2DSpeedVariation<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SurfaceEffector2D>()?.Animate("speedVariation",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SurfaceEffector2D AnimateForceScale(this UnityEngine.SurfaceEffector2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSurfaceEffector2DForceScale(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SurfaceEffector2D>()?.Animate("forceScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSurfaceEffector2DForceScale<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SurfaceEffector2D>()?.Animate("forceScale",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce2D AnimateForce(this UnityEngine.ConstantForce2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("force",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForce2DForce(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce2D>()?.Animate("force",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateConstantForce2DForce<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce2D>()?.Animate("force",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce2D AnimateRelativeForce(this UnityEngine.ConstantForce2D obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("relativeForce",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForce2DRelativeForce(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce2D>()?.Animate("relativeForce",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateConstantForce2DRelativeForce<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce2D>()?.Animate("relativeForce",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.ConstantForce2D AnimateTorque(this UnityEngine.ConstantForce2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("torque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateConstantForce2DTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.ConstantForce2D>()?.Animate("torque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateConstantForce2DTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.ConstantForce2D>()?.Animate("torque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.SpriteMask AnimateAlphaCutoff(this UnityEngine.SpriteMask obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("alphaCutoff",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpriteMaskAlphaCutoff(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.SpriteMask>()?.Animate("alphaCutoff",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSpriteMaskAlphaCutoff<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.SpriteMask>()?.Animate("alphaCutoff",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Experimental.U2D.SpriteShapeRenderer AnimateColor(this UnityEngine.Experimental.U2D.SpriteShapeRenderer obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSpriteShapeRendererColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Experimental.U2D.SpriteShapeRenderer>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateSpriteShapeRendererColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Experimental.U2D.SpriteShapeRenderer>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.StreamingController AnimateStreamingMipmapBias(this UnityEngine.StreamingController obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("streamingMipmapBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateStreamingControllerStreamingMipmapBias(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.StreamingController>()?.Animate("streamingMipmapBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateStreamingControllerStreamingMipmapBias<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.StreamingController>()?.Animate("streamingMipmapBias",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateTreeDistance(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("treeDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainTreeDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainTreeDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateTreeBillboardDistance(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("treeBillboardDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainTreeBillboardDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeBillboardDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainTreeBillboardDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeBillboardDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateTreeCrossFadeLength(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("treeCrossFadeLength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainTreeCrossFadeLength(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeCrossFadeLength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainTreeCrossFadeLength<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeCrossFadeLength",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateDetailObjectDistance(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("detailObjectDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainDetailObjectDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("detailObjectDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainDetailObjectDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("detailObjectDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateDetailObjectDensity(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("detailObjectDensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainDetailObjectDensity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("detailObjectDensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainDetailObjectDensity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("detailObjectDensity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateHeightmapPixelError(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("heightmapPixelError",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainHeightmapPixelError(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("heightmapPixelError",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainHeightmapPixelError<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("heightmapPixelError",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateBasemapDistance(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("basemapDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainBasemapDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("basemapDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainBasemapDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("basemapDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateLightmapScaleOffset(this UnityEngine.Terrain obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainLightmapScaleOffset(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("lightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateTerrainLightmapScaleOffset<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("lightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateRealtimeLightmapScaleOffset(this UnityEngine.Terrain obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("realtimeLightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainRealtimeLightmapScaleOffset(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("realtimeLightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateTerrainRealtimeLightmapScaleOffset<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("realtimeLightmapScaleOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimatePatchBoundsMultiplier(this UnityEngine.Terrain obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("patchBoundsMultiplier",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainPatchBoundsMultiplier(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("patchBoundsMultiplier",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTerrainPatchBoundsMultiplier<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("patchBoundsMultiplier",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateTreeLODBiasMultiplier(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("treeLODBiasMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainTreeLODBiasMultiplier(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeLODBiasMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainTreeLODBiasMultiplier<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("treeLODBiasMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateSplatmapDistance(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("splatmapDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainSplatmapDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("splatmapDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainSplatmapDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("splatmapDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateLegacySpecular(this UnityEngine.Terrain obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("legacySpecular",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainLegacySpecular(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("legacySpecular",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTerrainLegacySpecular<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("legacySpecular",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Terrain AnimateLegacyShininess(this UnityEngine.Terrain obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("legacyShininess",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTerrainLegacyShininess(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Terrain>()?.Animate("legacyShininess",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTerrainLegacyShininess<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Terrain>()?.Animate("legacyShininess",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GUIText AnimateLineSpacing(this UnityEngine.GUIText obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGUITextLineSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.GUIText>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateGUITextLineSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.GUIText>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GUIText AnimateTabSize(this UnityEngine.GUIText obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("tabSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGUITextTabSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.GUIText>()?.Animate("tabSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateGUITextTabSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.GUIText>()?.Animate("tabSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GUIText AnimateColor(this UnityEngine.GUIText obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGUITextColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.GUIText>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateGUITextColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.GUIText>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GUIText AnimatePixelOffset(this UnityEngine.GUIText obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pixelOffset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGUITextPixelOffset(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.GUIText>()?.Animate("pixelOffset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateGUITextPixelOffset<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.GUIText>()?.Animate("pixelOffset",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.TextMesh AnimateOffsetZ(this UnityEngine.TextMesh obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("offsetZ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextMeshOffsetZ(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TextMesh>()?.Animate("offsetZ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextMeshOffsetZ<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TextMesh>()?.Animate("offsetZ",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TextMesh AnimateCharacterSize(this UnityEngine.TextMesh obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("characterSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextMeshCharacterSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TextMesh>()?.Animate("characterSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextMeshCharacterSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TextMesh>()?.Animate("characterSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TextMesh AnimateLineSpacing(this UnityEngine.TextMesh obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextMeshLineSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TextMesh>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextMeshLineSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TextMesh>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TextMesh AnimateTabSize(this UnityEngine.TextMesh obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("tabSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextMeshTabSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TextMesh>()?.Animate("tabSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextMeshTabSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TextMesh>()?.Animate("tabSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.TextMesh AnimateColor(this UnityEngine.TextMesh obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextMeshColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.TextMesh>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTextMeshColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.TextMesh>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Tilemaps.Tilemap AnimateAnimationFrameRate(this UnityEngine.Tilemaps.Tilemap obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("animationFrameRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTilemapAnimationFrameRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Tilemaps.Tilemap>()?.Animate("animationFrameRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTilemapAnimationFrameRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Tilemaps.Tilemap>()?.Animate("animationFrameRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Tilemaps.Tilemap AnimateColor(this UnityEngine.Tilemaps.Tilemap obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTilemapColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Tilemaps.Tilemap>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTilemapColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Tilemaps.Tilemap>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.Tilemaps.Tilemap AnimateTileAnchor(this UnityEngine.Tilemaps.Tilemap obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("tileAnchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTilemapTileAnchor(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Tilemaps.Tilemap>()?.Animate("tileAnchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTilemapTileAnchor<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Tilemaps.Tilemap>()?.Animate("tileAnchor",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Tilemaps.TilemapRenderer AnimateChunkCullingBounds(this UnityEngine.Tilemaps.TilemapRenderer obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("chunkCullingBounds",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTilemapRendererChunkCullingBounds(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Tilemaps.TilemapRenderer>()?.Animate("chunkCullingBounds",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateTilemapRendererChunkCullingBounds<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Tilemaps.TilemapRenderer>()?.Animate("chunkCullingBounds",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.Tilemaps.TilemapCollider2D AnimateExtrusionFactor(this UnityEngine.Tilemaps.TilemapCollider2D obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("extrusionFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTilemapCollider2DExtrusionFactor(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Tilemaps.TilemapCollider2D>()?.Animate("extrusionFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTilemapCollider2DExtrusionFactor<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Tilemaps.TilemapCollider2D>()?.Animate("extrusionFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.CanvasGroup AnimateAlpha(this UnityEngine.CanvasGroup obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("alpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasGroupAlpha(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.CanvasGroup>()?.Animate("alpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasGroupAlpha<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.CanvasGroup>()?.Animate("alpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Canvas AnimateScaleFactor(this UnityEngine.Canvas obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("scaleFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScaleFactor(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Canvas>()?.Animate("scaleFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScaleFactor<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Canvas>()?.Animate("scaleFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Canvas AnimateReferencePixelsPerUnit(this UnityEngine.Canvas obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("referencePixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasReferencePixelsPerUnit(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Canvas>()?.Animate("referencePixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasReferencePixelsPerUnit<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Canvas>()?.Animate("referencePixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Canvas AnimatePlaneDistance(this UnityEngine.Canvas obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("planeDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasPlaneDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Canvas>()?.Animate("planeDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasPlaneDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Canvas>()?.Animate("planeDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Canvas AnimateNormalizedSortingGridSize(this UnityEngine.Canvas obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("normalizedSortingGridSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasNormalizedSortingGridSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Canvas>()?.Animate("normalizedSortingGridSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasNormalizedSortingGridSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Canvas>()?.Animate("normalizedSortingGridSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Experimental.VFX.VisualEffect AnimatePlayRate(this UnityEngine.Experimental.VFX.VisualEffect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("playRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateVisualEffectPlayRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Experimental.VFX.VisualEffect>()?.Animate("playRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateVisualEffectPlayRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Experimental.VFX.VisualEffect>()?.Animate("playRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateCenter(this UnityEngine.WheelCollider obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderCenter(this UnityEngine.GameObject obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderCenter<T>(this T obj,UnityEngine.Vector3 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("center",newValue,duration,UnityEngine.Vector3.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateRadius(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateSuspensionDistance(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("suspensionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderSuspensionDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("suspensionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderSuspensionDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("suspensionDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateForceAppPointDistance(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("forceAppPointDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderForceAppPointDistance(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("forceAppPointDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderForceAppPointDistance<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("forceAppPointDistance",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateMass(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderMass(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderMass<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("mass",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateWheelDampingRate(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wheelDampingRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderWheelDampingRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("wheelDampingRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderWheelDampingRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("wheelDampingRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateMotorTorque(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("motorTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderMotorTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("motorTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderMotorTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("motorTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateBrakeTorque(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("brakeTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderBrakeTorque(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("brakeTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderBrakeTorque<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("brakeTorque",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WheelCollider AnimateSteerAngle(this UnityEngine.WheelCollider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("steerAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWheelColliderSteerAngle(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("steerAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWheelColliderSteerAngle<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WheelCollider>()?.Animate("steerAngle",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Video.VideoPlayer AnimateTargetCameraAlpha(this UnityEngine.Video.VideoPlayer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("targetCameraAlpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateVideoPlayerTargetCameraAlpha(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Video.VideoPlayer>()?.Animate("targetCameraAlpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateVideoPlayerTargetCameraAlpha<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Video.VideoPlayer>()?.Animate("targetCameraAlpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.Video.VideoPlayer AnimatePlaybackSpeed(this UnityEngine.Video.VideoPlayer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("playbackSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateVideoPlayerPlaybackSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.Video.VideoPlayer>()?.Animate("playbackSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateVideoPlayerPlaybackSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.Video.VideoPlayer>()?.Animate("playbackSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WindZone AnimateRadius(this UnityEngine.WindZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWindZoneRadius(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WindZone>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWindZoneRadius<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WindZone>()?.Animate("radius",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WindZone AnimateWindMain(this UnityEngine.WindZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("windMain",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWindZoneWindMain(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WindZone>()?.Animate("windMain",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWindZoneWindMain<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WindZone>()?.Animate("windMain",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WindZone AnimateWindTurbulence(this UnityEngine.WindZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("windTurbulence",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWindZoneWindTurbulence(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WindZone>()?.Animate("windTurbulence",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWindZoneWindTurbulence<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WindZone>()?.Animate("windTurbulence",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WindZone AnimateWindPulseMagnitude(this UnityEngine.WindZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("windPulseMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWindZoneWindPulseMagnitude(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WindZone>()?.Animate("windPulseMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWindZoneWindPulseMagnitude<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WindZone>()?.Animate("windPulseMagnitude",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.WindZone AnimateWindPulseFrequency(this UnityEngine.WindZone obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("windPulseFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateWindZoneWindPulseFrequency(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.WindZone>()?.Animate("windPulseFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateWindZoneWindPulseFrequency<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.WindZone>()?.Animate("windPulseFrequency",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Dropdown AnimateAlphaFadeSpeed(this UnityEngine.UI.Dropdown obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("alphaFadeSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateDropdownAlphaFadeSpeed(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Dropdown>()?.Animate("alphaFadeSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateDropdownAlphaFadeSpeed<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Dropdown>()?.Animate("alphaFadeSpeed",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Graphic AnimateColor(this UnityEngine.UI.Graphic obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGraphicColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Graphic>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateGraphicColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Graphic>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Image AnimateFillAmount(this UnityEngine.UI.Image obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fillAmount",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateImageFillAmount(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Image>()?.Animate("fillAmount",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateImageFillAmount<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Image>()?.Animate("fillAmount",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Image AnimateEventAlphaThreshold(this UnityEngine.UI.Image obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("eventAlphaThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateImageEventAlphaThreshold(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Image>()?.Animate("eventAlphaThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateImageEventAlphaThreshold<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Image>()?.Animate("eventAlphaThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Image AnimateAlphaHitTestMinimumThreshold(this UnityEngine.UI.Image obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("alphaHitTestMinimumThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateImageAlphaHitTestMinimumThreshold(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Image>()?.Animate("alphaHitTestMinimumThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateImageAlphaHitTestMinimumThreshold<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Image>()?.Animate("alphaHitTestMinimumThreshold",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Image AnimatePixelsPerUnitMultiplier(this UnityEngine.UI.Image obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pixelsPerUnitMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateImagePixelsPerUnitMultiplier(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Image>()?.Animate("pixelsPerUnitMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateImagePixelsPerUnitMultiplier<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Image>()?.Animate("pixelsPerUnitMultiplier",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.InputField AnimateCaretBlinkRate(this UnityEngine.UI.InputField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("caretBlinkRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateInputFieldCaretBlinkRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.InputField>()?.Animate("caretBlinkRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateInputFieldCaretBlinkRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.InputField>()?.Animate("caretBlinkRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.InputField AnimateCaretColor(this UnityEngine.UI.InputField obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("caretColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateInputFieldCaretColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.InputField>()?.Animate("caretColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateInputFieldCaretColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.InputField>()?.Animate("caretColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.InputField AnimateSelectionColor(this UnityEngine.UI.InputField obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("selectionColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateInputFieldSelectionColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.InputField>()?.Animate("selectionColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateInputFieldSelectionColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.InputField>()?.Animate("selectionColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.AspectRatioFitter AnimateAspectRatio(this UnityEngine.UI.AspectRatioFitter obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("aspectRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateAspectRatioFitterAspectRatio(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.AspectRatioFitter>()?.Animate("aspectRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateAspectRatioFitterAspectRatio<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.AspectRatioFitter>()?.Animate("aspectRatio",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateReferencePixelsPerUnit(this UnityEngine.UI.CanvasScaler obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("referencePixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerReferencePixelsPerUnit(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("referencePixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerReferencePixelsPerUnit<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("referencePixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateScaleFactor(this UnityEngine.UI.CanvasScaler obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("scaleFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerScaleFactor(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("scaleFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerScaleFactor<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("scaleFactor",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateReferenceResolution(this UnityEngine.UI.CanvasScaler obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("referenceResolution",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerReferenceResolution(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("referenceResolution",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerReferenceResolution<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("referenceResolution",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateMatchWidthOrHeight(this UnityEngine.UI.CanvasScaler obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("matchWidthOrHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerMatchWidthOrHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("matchWidthOrHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerMatchWidthOrHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("matchWidthOrHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateFallbackScreenDPI(this UnityEngine.UI.CanvasScaler obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fallbackScreenDPI",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerFallbackScreenDPI(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("fallbackScreenDPI",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerFallbackScreenDPI<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("fallbackScreenDPI",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateDefaultSpriteDPI(this UnityEngine.UI.CanvasScaler obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("defaultSpriteDPI",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerDefaultSpriteDPI(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("defaultSpriteDPI",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerDefaultSpriteDPI<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("defaultSpriteDPI",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.CanvasScaler AnimateDynamicPixelsPerUnit(this UnityEngine.UI.CanvasScaler obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("dynamicPixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateCanvasScalerDynamicPixelsPerUnit(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("dynamicPixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateCanvasScalerDynamicPixelsPerUnit<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.CanvasScaler>()?.Animate("dynamicPixelsPerUnit",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.GridLayoutGroup AnimateCellSize(this UnityEngine.UI.GridLayoutGroup obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("cellSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGridLayoutGroupCellSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.GridLayoutGroup>()?.Animate("cellSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateGridLayoutGroupCellSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.GridLayoutGroup>()?.Animate("cellSize",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.GridLayoutGroup AnimateSpacing(this UnityEngine.UI.GridLayoutGroup obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("spacing",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateGridLayoutGroupSpacing(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.GridLayoutGroup>()?.Animate("spacing",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateGridLayoutGroupSpacing<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.GridLayoutGroup>()?.Animate("spacing",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.HorizontalOrVerticalLayoutGroup AnimateSpacing(this UnityEngine.UI.HorizontalOrVerticalLayoutGroup obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("spacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateHorizontalOrVerticalLayoutGroupSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.HorizontalOrVerticalLayoutGroup>()?.Animate("spacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateHorizontalOrVerticalLayoutGroupSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.HorizontalOrVerticalLayoutGroup>()?.Animate("spacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.LayoutElement AnimateMinWidth(this UnityEngine.UI.LayoutElement obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLayoutElementMinWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("minWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLayoutElementMinWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("minWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.LayoutElement AnimateMinHeight(this UnityEngine.UI.LayoutElement obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLayoutElementMinHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("minHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLayoutElementMinHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("minHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.LayoutElement AnimatePreferredWidth(this UnityEngine.UI.LayoutElement obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("preferredWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLayoutElementPreferredWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("preferredWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLayoutElementPreferredWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("preferredWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.LayoutElement AnimatePreferredHeight(this UnityEngine.UI.LayoutElement obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("preferredHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLayoutElementPreferredHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("preferredHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLayoutElementPreferredHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("preferredHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.LayoutElement AnimateFlexibleWidth(this UnityEngine.UI.LayoutElement obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("flexibleWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLayoutElementFlexibleWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("flexibleWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLayoutElementFlexibleWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("flexibleWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.LayoutElement AnimateFlexibleHeight(this UnityEngine.UI.LayoutElement obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("flexibleHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateLayoutElementFlexibleHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("flexibleHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateLayoutElementFlexibleHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.LayoutElement>()?.Animate("flexibleHeight",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Scrollbar AnimateValue(this UnityEngine.UI.Scrollbar obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("value",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollbarValue(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Scrollbar>()?.Animate("value",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollbarValue<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Scrollbar>()?.Animate("value",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Scrollbar AnimateSize(this UnityEngine.UI.Scrollbar obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollbarSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Scrollbar>()?.Animate("size",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollbarSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Scrollbar>()?.Animate("size",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateElasticity(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("elasticity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectElasticity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("elasticity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectElasticity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("elasticity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateDecelerationRate(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("decelerationRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectDecelerationRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("decelerationRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectDecelerationRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("decelerationRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateScrollSensitivity(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("scrollSensitivity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectScrollSensitivity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("scrollSensitivity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectScrollSensitivity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("scrollSensitivity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateHorizontalScrollbarSpacing(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("horizontalScrollbarSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectHorizontalScrollbarSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("horizontalScrollbarSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectHorizontalScrollbarSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("horizontalScrollbarSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateVerticalScrollbarSpacing(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("verticalScrollbarSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectVerticalScrollbarSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("verticalScrollbarSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectVerticalScrollbarSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("verticalScrollbarSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateVelocity(this UnityEngine.UI.ScrollRect obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("velocity",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectVelocity(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("velocity",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectVelocity<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("velocity",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateNormalizedPosition(this UnityEngine.UI.ScrollRect obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("normalizedPosition",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectNormalizedPosition(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("normalizedPosition",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectNormalizedPosition<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("normalizedPosition",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateHorizontalNormalizedPosition(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("horizontalNormalizedPosition",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectHorizontalNormalizedPosition(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("horizontalNormalizedPosition",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectHorizontalNormalizedPosition<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("horizontalNormalizedPosition",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.ScrollRect AnimateVerticalNormalizedPosition(this UnityEngine.UI.ScrollRect obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("verticalNormalizedPosition",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateScrollRectVerticalNormalizedPosition(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("verticalNormalizedPosition",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateScrollRectVerticalNormalizedPosition<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.ScrollRect>()?.Animate("verticalNormalizedPosition",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Slider AnimateMinValue(this UnityEngine.UI.Slider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("minValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSliderMinValue(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("minValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSliderMinValue<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("minValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Slider AnimateMaxValue(this UnityEngine.UI.Slider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maxValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSliderMaxValue(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("maxValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSliderMaxValue<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("maxValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Slider AnimateValue(this UnityEngine.UI.Slider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("value",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSliderValue(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("value",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSliderValue<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("value",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Slider AnimateNormalizedValue(this UnityEngine.UI.Slider obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("normalizedValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateSliderNormalizedValue(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("normalizedValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateSliderNormalizedValue<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Slider>()?.Animate("normalizedValue",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Text AnimateLineSpacing(this UnityEngine.UI.Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextLineSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Text>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextLineSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Text>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Shadow AnimateEffectColor(this UnityEngine.UI.Shadow obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("effectColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateShadowEffectColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Shadow>()?.Animate("effectColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateShadowEffectColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Shadow>()?.Animate("effectColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.UI.Shadow AnimateEffectDistance(this UnityEngine.UI.Shadow obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("effectDistance",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateShadowEffectDistance(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.UI.Shadow>()?.Animate("effectDistance",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateShadowEffectDistance<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.UI.Shadow>()?.Animate("effectDistance",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.EventSystems.BaseInput AnimateCompositionCursorPos(this UnityEngine.EventSystems.BaseInput obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("compositionCursorPos",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateBaseInputCompositionCursorPos(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.EventSystems.BaseInput>()?.Animate("compositionCursorPos",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateBaseInputCompositionCursorPos<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.EventSystems.BaseInput>()?.Animate("compositionCursorPos",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.EventSystems.StandaloneInputModule AnimateInputActionsPerSecond(this UnityEngine.EventSystems.StandaloneInputModule obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("inputActionsPerSecond",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateStandaloneInputModuleInputActionsPerSecond(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.EventSystems.StandaloneInputModule>()?.Animate("inputActionsPerSecond",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateStandaloneInputModuleInputActionsPerSecond<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.EventSystems.StandaloneInputModule>()?.Animate("inputActionsPerSecond",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.EventSystems.StandaloneInputModule AnimateRepeatDelay(this UnityEngine.EventSystems.StandaloneInputModule obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("repeatDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateStandaloneInputModuleRepeatDelay(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<UnityEngine.EventSystems.StandaloneInputModule>()?.Animate("repeatDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateStandaloneInputModuleRepeatDelay<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<UnityEngine.EventSystems.StandaloneInputModule>()?.Animate("repeatDelay",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TextContainer AnimatePivot(this TMPro.TextContainer obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pivot",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextContainerPivot(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TextContainer>()?.Animate("pivot",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateTextContainerPivot<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TextContainer>()?.Animate("pivot",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static TMPro.TextContainer AnimateSize(this TMPro.TextContainer obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextContainerSize(this UnityEngine.GameObject obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TextContainer>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static T AnimateTextContainerSize<T>(this T obj,UnityEngine.Vector2 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TextContainer>()?.Animate("size",newValue,duration,UnityEngine.Vector2.Lerp,easeMode);return obj;}
		public static TMPro.TextContainer AnimateWidth(this TMPro.TextContainer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("width",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextContainerWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TextContainer>()?.Animate("width",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextContainerWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TextContainer>()?.Animate("width",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TextContainer AnimateHeight(this TMPro.TextContainer obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextContainerHeight(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TextContainer>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTextContainerHeight<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TextContainer>()?.Animate("height",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TextContainer AnimateMargins(this TMPro.TextContainer obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("margins",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextContainerMargins(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TextContainer>()?.Animate("margins",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateTextContainerMargins<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TextContainer>()?.Animate("margins",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateColor(this TMPro.TMP_Text obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("color",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateAlpha(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("alpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextAlpha(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("alpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextAlpha<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("alpha",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateFaceColor(this TMPro.TMP_Text obj,UnityEngine.Color32 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("faceColor",newValue,duration,UnityEngine.Color32.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextFaceColor(this UnityEngine.GameObject obj,UnityEngine.Color32 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("faceColor",newValue,duration,UnityEngine.Color32.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextFaceColor<T>(this T obj,UnityEngine.Color32 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("faceColor",newValue,duration,UnityEngine.Color32.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateOutlineColor(this TMPro.TMP_Text obj,UnityEngine.Color32 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("outlineColor",newValue,duration,UnityEngine.Color32.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextOutlineColor(this UnityEngine.GameObject obj,UnityEngine.Color32 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("outlineColor",newValue,duration,UnityEngine.Color32.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextOutlineColor<T>(this T obj,UnityEngine.Color32 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("outlineColor",newValue,duration,UnityEngine.Color32.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateOutlineWidth(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("outlineWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextOutlineWidth(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("outlineWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextOutlineWidth<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("outlineWidth",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateFontSize(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fontSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextFontSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("fontSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextFontSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("fontSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateFontSizeMin(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fontSizeMin",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextFontSizeMin(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("fontSizeMin",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextFontSizeMin<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("fontSizeMin",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateFontSizeMax(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("fontSizeMax",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextFontSizeMax(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("fontSizeMax",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextFontSizeMax<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("fontSizeMax",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateCharacterSpacing(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("characterSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextCharacterSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("characterSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextCharacterSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("characterSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateWordSpacing(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wordSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextWordSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("wordSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextWordSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("wordSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateLineSpacing(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextLineSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextLineSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("lineSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateLineSpacingAdjustment(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("lineSpacingAdjustment",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextLineSpacingAdjustment(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("lineSpacingAdjustment",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextLineSpacingAdjustment<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("lineSpacingAdjustment",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateParagraphSpacing(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("paragraphSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextParagraphSpacing(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("paragraphSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextParagraphSpacing<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("paragraphSpacing",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateCharacterWidthAdjustment(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("characterWidthAdjustment",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextCharacterWidthAdjustment(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("characterWidthAdjustment",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextCharacterWidthAdjustment<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("characterWidthAdjustment",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateWordWrappingRatios(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("wordWrappingRatios",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextWordWrappingRatios(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("wordWrappingRatios",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextWordWrappingRatios<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("wordWrappingRatios",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateMappingUvLineOffset(this TMPro.TMP_Text obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("mappingUvLineOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextMappingUvLineOffset(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("mappingUvLineOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextMappingUvLineOffset<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("mappingUvLineOffset",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_Text AnimateMargin(this TMPro.TMP_Text obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("margin",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPTextMargin(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_Text>()?.Animate("margin",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateTMPTextMargin<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_Text>()?.Animate("margin",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static TMPro.TextMeshProUGUI AnimateMaskOffset(this TMPro.TextMeshProUGUI obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("maskOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTextMeshProUGUIMaskOffset(this UnityEngine.GameObject obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TextMeshProUGUI>()?.Animate("maskOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static T AnimateTextMeshProUGUIMaskOffset<T>(this T obj,UnityEngine.Vector4 newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TextMeshProUGUI>()?.Animate("maskOffset",newValue,duration,UnityEngine.Vector4.Lerp,easeMode);return obj;}
		public static TMPro.TMP_InputField AnimateCaretBlinkRate(this TMPro.TMP_InputField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("caretBlinkRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPInputFieldCaretBlinkRate(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_InputField>()?.Animate("caretBlinkRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPInputFieldCaretBlinkRate<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_InputField>()?.Animate("caretBlinkRate",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_InputField AnimateScrollSensitivity(this TMPro.TMP_InputField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("scrollSensitivity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPInputFieldScrollSensitivity(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_InputField>()?.Animate("scrollSensitivity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPInputFieldScrollSensitivity<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_InputField>()?.Animate("scrollSensitivity",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_InputField AnimateCaretColor(this TMPro.TMP_InputField obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("caretColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPInputFieldCaretColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_InputField>()?.Animate("caretColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTMPInputFieldCaretColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_InputField>()?.Animate("caretColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static TMPro.TMP_InputField AnimateSelectionColor(this TMPro.TMP_InputField obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("selectionColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPInputFieldSelectionColor(this UnityEngine.GameObject obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_InputField>()?.Animate("selectionColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static T AnimateTMPInputFieldSelectionColor<T>(this T obj,UnityEngine.Color newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_InputField>()?.Animate("selectionColor",newValue,duration,UnityEngine.Color.Lerp,easeMode);return obj;}
		public static TMPro.TMP_InputField AnimatePointSize(this TMPro.TMP_InputField obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("pointSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPInputFieldPointSize(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_InputField>()?.Animate("pointSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPInputFieldPointSize<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_InputField>()?.Animate("pointSize",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_SubMesh AnimatePadding(this TMPro.TMP_SubMesh obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("padding",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPSubMeshPadding(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_SubMesh>()?.Animate("padding",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPSubMeshPadding<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_SubMesh>()?.Animate("padding",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static TMPro.TMP_SubMeshUI AnimatePadding(this TMPro.TMP_SubMeshUI obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.Animate("padding",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static UnityEngine.GameObject AnimateTMPSubMeshUIPadding(this UnityEngine.GameObject obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear){obj.GetComponent<TMPro.TMP_SubMeshUI>()?.Animate("padding",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
		public static T AnimateTMPSubMeshUIPadding<T>(this T obj,System.Single newValue,float duration=1,EaseMode easeMode=EaseMode.Linear)where T:UnityEngine.MonoBehaviour{obj.GetComponent<TMPro.TMP_SubMeshUI>()?.Animate("padding",newValue,duration,UnityEngine.Mathf.Lerp,easeMode);return obj;}
    }
}

